Git development was started by Torvalds in April 2005 when the proprietary source-control management (SCM) system used for Linux kernel development since 2002, BitKeeper, revoked its free license for Linux development.
The copyright holder of BitKeeper, Larry McVoy, claimed that Andrew Tridgell had created SourcePuller by reverse engineering the BitKeeper protocols. 
The same incident also spurred the creation of another version-control system, Mercurial.

Torvalds wanted a distributed system that he could use like BitKeeper, but none of the available free systems met his needs. 
He cited an example of a source-control management system needing 30 seconds to apply a patch and update all associated metadata, and noted that this would not scale to the needs of Linux kernel development, where synchronizing with fellow maintainers could require 250 such actions at once. For his design criterion, he specified that patching should take no more than three seconds, and added three more goals:

    Take the Concurrent Versions System (CVS) as an example of what not to do; if in doubt, make the exact opposite decision.
    Support a distributed, BitKeeper-like workflow.
    Include very strong safeguards against corruption, either accidental or malicious.

These criteria eliminated every version-control system in use at the time, so immediately after the 2.6.12-rc2 Linux kernel development release, Torvalds set out to write his own.

Git (/ɡɪt/) is a distributed version control system that tracks changes in any set of computer files, usually used for coordinating work among programmers who are collaboratively developing source code during software development. 
Its goals include speed, data integrity, and support for distributed, non-linear workflows (thousands of parallel branches running on different computers)

Torvalds turned over maintenance on 26 July 2005 to Junio Hamano, a major contributor to the project. 
Hamano was responsible for the 1.0 release on 21 December 2005.